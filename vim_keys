motions
number before actions will amplify that action

inserts
i = insert before cursor
a = insert after cursor 
A = insert at the end of line
o = place you on next line with insert mode
O - place you on line above with insert mode

deletes
dd = delete whole line
d$ = delete rest of the line from where icon is
de = delete to end of word
dw = delete word from where cursor is
x = delete what cursor is on

undo
u = undo
ctrl + u = return line to original state
ctrl + r = undo the undos

movement
h = left
j = up
k = down
l = left
e = end of word
w = start of word
0 = beginning of line
[] = will move up and down by functions
ctrl + f = moves down by page
ctrl + b = moves up by page

replace word
r = r + {your key}
R = will make you in insert mode at that location

puts will replace previous deleted item back
p = put

change word operator
ce + {whatever needs to change}

moving quickly between in a file
G = bottom of file
gg = top of file
number+shift + G = line in file
CTRL + G = display line location and file
<number> + gt = swtich to that numbered tab

searching 
/ + {search_word} + ENTER = finds your first match word
? + {search_word} + ENTER = finds last match word
CTRL + o = goes back in the list
CTRL + i = goes forward in the list
n = will go to previous location
N = will go to next location

matching brackets/parenthesis
% on the bracket/parentehsis

subsituting words
:s/old_word/new_word = will replace first word in line
:s/old_word/new_word/g = will replace last word in line
     
4. To change every occurrence of a character string between two lines,
     type   :#,#s/old/new/g    where #,# are the line numbers of the range
                               of lines where the substitution is to be done.
     Type   :%s/old/new/g      to change every occurrence in the whole file.
     Type   :%s/old/new/gc     to find every occurrence in the whole file,
                               with a prompt whether to substitute or not.

external command
:!{command} will allow you perform external commands

save files
:w {file_name} = saves current file to current directory

LESSON 6 for file writing, deleting and retrieving

COPY AND PASTE TEXT
v (visual) + highlight your text + y + p

JUMP FROM WINDOW TO WINDOW
CTRL + W
:wall = write all
:qall = quit all but doesn't exit vim
:close = to close just one split screen but not all of vim

LESSON 7 for online help/readme

View different version of the same file
vimdiff filename~ filename

DIRECTORY STUFF
this stuff has be done in the directory
t =  will open the file in a new tab
v = will open a vertical split
